"use strict";(self.webpackChunkoss_docs=self.webpackChunkoss_docs||[]).push([[7804],{6833:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"appointments/get-appointments-list","title":"Get Appointments List (Search)","description":"Request","source":"@site/docs/appointments/get-appointments-list.md","sourceDirName":"appointments","slug":"/appointments/get-appointments-list","permalink":"/narnic-api-docs/appointments/get-appointments-list","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Create Appointment Request","permalink":"/narnic-api-docs/appointments/create-appointment-request"},"next":{"title":"Common DTOs","permalink":"/narnic-api-docs/category/common-dtos"}}');var s=t(4848),d=t(8453);const r={sidebar_position:2},c="Get Appointments List (Search)",l={},o=[{value:"Request",id:"request",level:2},{value:"Description:",id:"description",level:3},{value:"Response",id:"response",level:2},{value:"Response Description:",id:"response-description",level:3},{value:"Appointment Object Fields:",id:"appointment-object-fields",level:4}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"get-appointments-list-search",children:"Get Appointments List (Search)"})}),"\n",(0,s.jsx)(n.h2,{id:"request",children:"Request"}),"\n",(0,s.jsxs)(n.p,{children:["URL:  ",(0,s.jsx)(n.code,{children:"<BASE_URL>/api/user/v1/appointments/search"})," ; Note: (use ",(0,s.jsx)(n.code,{children:"/search"})," instead of ",(0,s.jsx)(n.code,{children:"/list"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:["VERB: ",(0,s.jsx)(n.code,{children:"POST"})]}),"\n",(0,s.jsx)(n.p,{children:"Authentication: Bearer token"}),"\n",(0,s.jsx)(n.p,{children:"Body:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{  \n  "pageNo": 0,  \n  "pageSize": 20,  \n  "searchTerm": "",  \n  "doctors": [  \n    "UUID"  \n  ],  \n  "includedStatus": [  \n    "Started"  \n  ],  \n  "rangeStart": {\n          "milliSeconds": 1708772400000\n  },  \n  "rangeEnd": {\n          "milliSeconds": 1708772400000\n   },  \n  "isMySchedule": false,  \n  "getAddressedTreatments": false,  \n  "patientId": null  \n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"description",children:"Description:"}),"\n",(0,s.jsx)(n.p,{children:"This endpoint allows searching for appointments with various filtering options. It supports pagination and can filter by doctor, status, date range, and patient."}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Is required"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"pageNo"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{children:"The page number for paginated results (0-based index). Default: 0"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"pageSize"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{children:"The number of items per page. Default: 20"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"searchTerm"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{children:"A search term to filter appointments (searches in patient details etc.). Leave empty to get all appointments"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"doctors"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{children:"Array of doctor UUIDs to filter appointments by specific doctors"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"includedStatus"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{children:'Array of status values to include in results Should be in ("Unconfirmed", "Scheduled", "PatientArrived", "Started", "Completed", "Cancelled", "NoShow")'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"rangeStart"})}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{children:"Start timestamp (in milliseconds) for date range filtering. Null means no start limit"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"rangeEnd"})}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{children:"End timestamp (in milliseconds) for date range filtering. Null means no end limit"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isMySchedule"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsxs)(n.td,{children:["Should be ",(0,s.jsx)(n.code,{children:"false"})," always"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"getAddressedTreatments"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsxs)(n.td,{children:["Should be ",(0,s.jsx)(n.code,{children:"false"})," always"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"patientId"})}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{children:"Patient UUID to filter appointments for a specific patient. Null means all patients"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"response",children:"Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "list": [\n      {\n        "id": "UUID",\n        "patient": "<SimplePatientDto>",\n        "doctorId": "UUID",\n        "doctorName": {\n          "title": "Dr.",\n          "preferredName": "Doctor preferred name",\n          "fullName": "Doctor name"\n        },\n        "doctorColor": "279d9d",\n        "plannedStartTime": {\n          "milliSeconds": 1708771500000\n        },\n        "plannedEndTime": {\n          "milliSeconds": 1708772400000\n        },\n        "visitType": {\n          "name": "Cleaning",\n          "color": "000000",\n          "durationInMinutes": 15\n        },\n        "status": "Started",\n        "notes": "Appointment notes",\n        "createdOn": {\n          "milliSeconds": 1691321000008\n        },\n        "addressedTreatments": [],\n        "invoiceItem": "<InvoiceItemDto>"\n      }\n    ],\n    "total": 171\n  },\n  "status": "0"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"response-description",children:"Response Description:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"data.list"}),": Array of appointment objects matching the search criteria"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"data.total"}),": Total number of appointments matching the filters (regardless of pagination)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"status"}),': Status code indicating success ("0") or error']}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"appointment-object-fields",children:"Appointment Object Fields:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"id"}),": Unique identifier for the appointment"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"patient"}),": ",(0,s.jsx)(n.a,{href:"/common-dtos/simple-patient-dto",children:"SimplePatientDto"})," object"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"doctorId"}),": Unique identifier of the attending doctor"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"doctorName"}),": Object containing doctor's title and name information"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"doctorColor"}),": Color code associated with the doctor"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"plannedStartTime"}),": Scheduled start time in milliseconds since epoch"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"plannedEndTime"}),": Scheduled end time in milliseconds since epoch"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"visitType"}),": Details about the appointment type (name, color, duration)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"status"}),": Current status of the appointment"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"notes"}),": Any notes associated with the appointment"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"createdOn"}),": When the appointment was created"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"addressedTreatments"}),": List of treatments addressed in this appointment"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"invoiceItem"}),": ",(0,s.jsx)(n.a,{href:"/common-dtos/invoice-item-dto",children:"InvoiceItemDto"})," object"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}}}]);