"use strict";(self.webpackChunkoss_docs=self.webpackChunkoss_docs||[]).push([[5567],{6156:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"appointments/create-appointment-request","title":"Create Appointment Request","description":"Request","source":"@site/docs/appointments/create-appointment-request.md","sourceDirName":"appointments","slug":"/appointments/create-appointment-request","permalink":"/narnic-api-docs/appointments/create-appointment-request","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Appointments API Endpoints","permalink":"/narnic-api-docs/category/appointments-api-endpoints"},"next":{"title":"Get Appointments List (Search)","permalink":"/narnic-api-docs/appointments/get-appointments-list"}}');var s=t(4848),d=t(8453);const r={sidebar_position:2},c="Create Appointment Request",o={},a=[{value:"Request",id:"request",level:2},{value:"Response",id:"response",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"create-appointment-request",children:"Create Appointment Request"})}),"\n",(0,s.jsx)(n.h2,{id:"request",children:"Request"}),"\n",(0,s.jsxs)(n.p,{children:["URL:  ",(0,s.jsx)(n.code,{children:"<BASE_URL>/api/v1/appointments/requests/create"})]}),"\n",(0,s.jsxs)(n.p,{children:["VERB: ",(0,s.jsx)(n.code,{children:"POST"})]}),"\n",(0,s.jsx)(n.p,{children:"Authentication: Bearer token"}),"\n",(0,s.jsx)(n.p,{children:"Body:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "createRequest" : {\n    "externalId": "Externally Generated ID",\n    "type": "New",\n    "data": {\n      "newAppointmentData": {\n        "patientName": "Optional: Patient name",\n        "patientCallingCode": "Optional: Patient calling code. e.g. +971",\n        "patientLocalPhone":  "Optional: Patient phone. e.g. 561231231",\n        "doctorId": "Optional: Doctor ID in Medico",\n        "startTime": {\n          "milliSeconds": 1726492349955\n        },\n        "endTime": {\n          "milliSeconds": 1726492449955\n        },\n        "notes":  "Optional: any notes from patient"\n      }\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Description:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Is required"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"externalId"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{children:"Externally generated ID - Should be unique for each request"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"type"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsxs)(n.td,{children:["Should be ",(0,s.jsx)(n.code,{children:"New"})," For new appointment requests"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"data"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{children:"New appointment request data"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"patientName"})}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{children:"Patient name"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"patientCallingCode"})}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{children:"Patient calling code. e.g. +971"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"patientLocalPhone"})}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{children:"Patient phone. e.g. 561231231"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"doctorId"})}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{children:"Doctor ID in Medico"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"startTime"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsxs)(n.td,{children:["The field ",(0,s.jsx)(n.code,{children:"milliSeconds"})," is a Long shows the epoch time for the patient preferred start time for the appointment"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"endTime"})}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsxs)(n.td,{children:["The field ",(0,s.jsx)(n.code,{children:"milliSeconds"})," is a Long shows the epoch time for the patient preferred end time for the appointment"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"notes"})}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{children:"Any notes from patient"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"response",children:"Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{  \n  "status": "0"  \n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);